{"version":3,"sources":["./src/app/services/movements-api-client.service.ts","./src/app/components/movements-manager/movements-manager.component.ts","./src/app/components/movements-manager/movements-manager.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/movement/movement.component.ts","./src/app/components/movement/movement.component.html","./src/app/guards/user-logged.guard.ts","./src/app/components/form-edit-movement/form-edit-movement.component.ts","./src/app/components/form-edit-movement/form-edit-movement.component.html","./src/app/models/category.model.ts","./src/app/components/form-add-movement/form-add-movement.component.ts","./src/app/components/form-add-movement/form-add-movement.component.html","./src/app/services/auth.service.ts","./src/app/models/movement.model.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, Inject, forwardRef } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Movement } from '../models/movement.model';\r\nimport { APP_CONFIG, AppConfig } from '../app.module';\r\nimport { HttpClient, HttpHeaders, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovementsApiClient {\r\n  email: string;\r\n  name: string;\r\n  balance: BehaviorSubject<number>;\r\n  movements: Movement[];\r\n  movements$: BehaviorSubject<Movement[]>;\r\n\r\n  constructor(@Inject(forwardRef(() => APP_CONFIG)) private config: AppConfig, private http: HttpClient) {\r\n    this.balance = new BehaviorSubject<number>(0);\r\n    this.movements$ = new BehaviorSubject<Movement[]>([]);\r\n  }\r\n\r\n  loadAccount(): Promise<void> {\r\n    this.email = localStorage.getItem('userLog');\r\n    if (this.email === null) {\r\n      console.log(\"userLog no existe. No se cargan los datos\");\r\n      return null;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n      console.log(\"userLog existe. Se cargan los datos de\");\r\n      console.log(this.email);\r\n      const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\r\n      const req = new HttpRequest('GET', this.config.apiEndpoint + '/loadAccount?email=' + this.email, { headers: headers });\r\n      this.http.request(req).subscribe((data: HttpResponse<{}>) => {\r\n        if(data.status === 200) {\r\n          let response: any = data.body[0];\r\n          this.email = response.email;\r\n          this.name = response.name;\r\n          this.balance.next(response.balance as number);\r\n          this.loadMovements().then(() => resolve());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  loadMovements() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\r\n      const req = new HttpRequest('GET', this.config.apiEndpoint + '/allMovements?user_email=' + this.email, { headers: headers });\r\n      this.http.request(req).subscribe((data: HttpResponse<{}>) => {\r\n        if(data.status === 200) {\r\n          var response: any = data.body;\r\n          var allMovements = response.map(m => new Movement(m.mount, m.type, m.category, m.concept, m.date, m.user_email, m.id));\r\n          this.movements = allMovements;\r\n          this.movements$.next(this.movements);\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  edit(mount: number, oldMount: number, type: string, category: number, concept: string, id: string) {\r\n    const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\r\n    const req = new HttpRequest('GET', this.config.apiEndpoint + '/edit?mount=' + mount + '&category=' + category + '&concept=' + concept + '&id=' + id, { headers: headers });\r\n    this.http.request(req).subscribe((data: HttpResponse<{}>) => {\r\n      if(data.status === 200) {\r\n        let movement: Movement = this.movements.find(movement => movement.id == id);\r\n        movement.setMount(mount);\r\n        movement.setConcept(concept);\r\n        movement.setCategory(category);\r\n        this.movements$.next(this.movements);\r\n        console.log(\"se edito el registro\");\r\n        let oldBalance = this.balance.getValue();\r\n        if (type == \"Ingreso\")\r\n          this.balance.next((oldBalance - oldMount) + mount);\r\n        else\r\n          this.balance.next((oldBalance + oldMount) - mount);\r\n        this.updateBalance();\r\n      }\r\n    });\r\n  }\r\n\r\n  add(movement: Movement) {\r\n    const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\r\n    const req = new HttpRequest('POST', this.config.apiEndpoint + '/add', movement, { headers: headers });\r\n    this.http.request(req).subscribe((data: HttpResponse<{}>) => {\r\n      if(data.status === 200) {\r\n        this.movements.unshift(movement);\r\n        this.movements$.next(this.movements);\r\n        console.log(\"se agrego el registro\");\r\n        let balance = this.balance.getValue();\r\n        if (movement.type == \"Ingreso\")\r\n          this.balance.next(balance + movement.mount);\r\n        else\r\n          this.balance.next(balance - movement.mount);\r\n        this.updateBalance();\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(id: string) {\r\n    console.log(\"se recibio el llamado a delete\")\r\n    const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\r\n    const req = new HttpRequest('GET', this.config.apiEndpoint + '/delete?id=' + id, { headers: headers });\r\n    this.http.request(req).subscribe((data: HttpResponse<{}>) => {\r\n      if(data.status === 200) {\r\n        let index = this.movements.findIndex(movement => movement.id === id);\r\n        let deleted = this.movements.splice(index, 1);\r\n        this.movements$.next(this.movements);\r\n        console.log(\"se elimino el registro\");\r\n        let oldBalance = this.balance.getValue();\r\n        if(deleted[0].type === 'Ingreso')\r\n          this.balance.next(oldBalance-deleted[0].mount);\r\n        else\r\n          this.balance.next(oldBalance+deleted[0].mount);\r\n        this.updateBalance();\r\n      }\r\n    });\r\n  }\r\n\r\n  updateBalance() {\r\n    console.log(\"Se ejecuto la actualizancion del balance\");\r\n    const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\r\n    const req = new HttpRequest('POST', this.config.apiEndpoint + '/updateBalance', { 'balance': this.balance.getValue(), 'email': this.email }, { headers: headers });\r\n    this.http.request(req).subscribe((data: HttpResponse<{}>) => {\r\n      if(data.status === 200)\r\n        console.log(\"se actualizo el balance\");\r\n    });\r\n  }\r\n\r\n  subscribeOnChangeBalance(fn) {\r\n    this.balance.subscribe(fn);\r\n  }\r\n\r\n  subscribeOnChangeMovements(fn) {\r\n    this.movements$.subscribe(fn);\r\n  }\r\n\r\n  getName = () => this.name;\r\n  getEmail = () => this.email;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MovementsApiClient } from '../../services/movements-api-client.service';\r\nimport { FormAddMovementComponent } from '../form-add-movement/form-add-movement.component';\r\nimport { Movement } from '../../models/movement.model'\r\nimport { Category } from '../../models/category.model';\r\n\r\n@Component({\r\n  selector: 'app-movements-manager',\r\n  templateUrl: './movements-manager.component.html',\r\n  styleUrls: ['./movements-manager.component.css']\r\n})\r\nexport class MovementsManagerComponent implements OnInit {\r\n\tmovements: Movement[];\r\n  movementsSelected: Movement[];\r\n\tcategories: Map<number, string>;\r\n\tcategorySelected = 0;\r\n\ttypeSelected = \"\";\r\n\r\n  constructor(public movementsApiClient: MovementsApiClient, private modalService: NgbModal) {\r\n  \tthis.categories = Category.getCategories(\"\");\r\n  \tthis.movementsApiClient.subscribeOnChangeMovements(movements => {\r\n      this.movements = movements;\r\n      this.movementsSelected = movements;\r\n      this.categorySelected = 0;\r\n      this.typeSelected = \"\";\r\n    });\r\n    this.movementsSelected = this.movements;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  add() {\r\n  \tthis.modalService.open(FormAddMovementComponent);\r\n  }\r\n\r\n  typeSelection() {\r\n  \tthis.categorySelected = 0;\r\n  \tif(this.typeSelected == \"\") {\r\n  \t\tthis.movementsSelected = this.movements;\r\n  \t\tthis.categories = Category.getCategories(\"\");\r\n  \t}\telse {\r\n\t  \tthis.filterType(this.typeSelected);\r\n\t \t\tthis.categories = Category.getCategories(this.typeSelected);\r\n\t \t}\r\n  }\r\n\r\n  categorySelection() {\r\n  \tif(this.categorySelected == 0) {\r\n  \t\tif(this.typeSelected == \"\")\r\n\t  \t\tthis.movementsSelected = this.movements;\r\n\t  \telse\r\n\t  \t\tthis.filterType(this.typeSelected);\r\n  \t} else {\r\n  \t\tthis.filterCategory(this.categorySelected);\r\n  \t}\r\n  }\r\n\r\n  filterType(type: string) {\r\n    this.movementsSelected = this.movements.filter(movement => movement.type === type);\r\n  }\r\n\r\n  filterCategory(category: number) {\r\n    this.movementsSelected = this.movements.filter(movement => movement.category === category);\r\n  }\r\n}\r\n","<div>\r\n\t<h2 class=\"my-3\">Gestor de Movimientos</h2>\r\n\t<div class=\"row row-cols-1 row-cols-md-2 m-1\">\r\n\t\t<button class=\"btn btn-success mb-3 col-12 col-md-8\" (click)=\"add()\">\r\n\t\t\t<span class=\"material-icons\">add_circle_outline</span>Nueva transferencia\r\n\t\t</button>\r\n\t\t<div class=\"col selector p-md-2\">\r\n\t\t\t<label class=\"mr-2\">Tipo: </label>\r\n\t\t\t<select class=\"form-control col-8 col-md\" [(ngModel)]=\"typeSelected\" (ngModelChange)=\"typeSelection()\">\r\n\t\t\t\t<option value=\"\">Todos</option>\r\n\t\t\t\t<option value=\"Ingreso\">Ingreso</option>\r\n\t\t\t\t<option value=\"Egreso\">Egreso</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class=\"col selector p-md-2\">\r\n\t\t\t<label class=\"mr-2\">Categoria: </label>\r\n\t\t\t<select class=\"form-control col-8 col-md\" [(ngModel)]=\"categorySelected\" (ngModelChange)=\"categorySelection()\">\r\n\t\t\t\t<option value=\"0\">Todos</option>\r\n\t\t\t\t<option *ngFor=\"let category of categories | keyvalue\" [ngValue]=\"category.key\">{{ category.value }}</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t</div>\r\n\t<ul class=\"my-1\">\r\n\t\t<p *ngIf=\"!movements.length\">No hay movimientos aún para administrar.<p>\r\n\t\t<li *ngFor=\"let m of movementsSelected\">\r\n\t\t\t<app-movement\r\n\t\t\t\t(deleteMovement) = \"movementsApiClient.delete($event)\"\r\n\t\t\t\t[mount] = 'm.mount'\r\n\t\t\t\t[type] = 'm.type'\r\n\t\t\t\t[category_id] = 'm.category'\r\n\t\t\t\t[concept] = 'm.concept'\r\n\t\t\t\t[date] = 'm.date'\r\n\t\t\t\t[id] = 'm.id'\r\n\t\t\t\t[edit] = 'true'>\r\n\t\t\t</app-movement>\r\n\t\t</li>\r\n\t</ul>\t\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div>\r\n\t<section>\r\n\t\t<div class=\"data d-flex flex-wrap\">\r\n\t\t\t<div class=\"info col-12 col-sm order-1 order-sm-3 py-4 py-sm-2\">\r\n\t\t\t\t<div class=\"my-sm-2 name\">{{ name }}</div>\r\n\t\t\t\t<div class=\"my-sm-2 text-white-50\">E-mail: {{ email }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"balance order-2 col-12 col-sm p-0\">\r\n\t\t\t\t<h3><span class=\"material-icons\"><span class=\"material-icons\">monetization_on</span></span>Balance Actual</h3>\r\n\t\t\t\t<h2 class=\"py-sm-3\">${{ balance }}</h2>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"date order-3 col-12 col-lg d-flex flex-wrap p-0\">\r\n\t\t\t\t<h3 class=\"col-12 col-sm-4 col-lg-12\"><span class=\"material-icons\">calendar_today</span>Fecha</h3>\r\n\t\t\t\t<h2 class=\"col py-lg-4\">{{ today | date:\"dd/MM/yyyy\" }}</h2>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</section>\r\n\t<section>\r\n\t\t<h2>Últimos Movimientos</h2>\r\n\t\t<p *ngIf=\"!movements.length\">Usted no ha realizado ninguna transacción.<p>\r\n\t\t<ul>\r\n\t\t\t<li *ngFor=\"let m of movements; trackBy: trackElement\">\r\n\t\t\t\t<app-movement\r\n\t\t\t\t\t[mount] = 'm.mount'\r\n\t\t\t\t\t[type] = 'm.type'\r\n\t\t\t\t\t[category_id] = 'm.category'\r\n\t\t\t\t\t[concept] = 'm.concept'\r\n\t\t\t\t\t[date] = 'm.date'>\r\n\t\t\t\t</app-movement>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</section>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { formatDate } from '@angular/common';\r\nimport { MovementsApiClient } from '../../services/movements-api-client.service';\r\nimport { Movement } from '../../models/movement.model';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\tpublic balance: number;\r\n  public name: string;\r\n  public email: string;\r\n  public today: Date;\r\n  public movements: Movement[];\r\n\r\n  constructor(public movementsApiClient: MovementsApiClient) {\r\n  \tmovementsApiClient.subscribeOnChangeBalance(balance => this.balance = balance);\r\n    movementsApiClient.subscribeOnChangeMovements(movements => this.movements = movements.slice(0,10));\r\n    this.name = this.movementsApiClient.getName();\r\n    this.email = this.movementsApiClient.getEmail();\r\n    this.today = new Date();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  trackElement(index: number, element: any) {\r\n  \treturn element ? element.id : null; \r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"row\">\r\n    <nav class=\"navbar navbar-dark navbar-expand-md\">\r\n      <a class=\"navbar-brand\" href=\"#\">\r\n        <h1 class=\"titulo d-none d-sm-block\"><span>Mi </span>Presupuesto</h1>\r\n        <h2 class=\"titulo d-block d-sm-none\"><span>Mi</span>Presupuesto</h2>\r\n      </a>\r\n      <button class=\"navbar-toggler\" type=\"button\" (click)=\"toggleCollapse()\" *ngIf=\"authService.isLoggedIn()\"><span class=\"navbar-toggler-icon\"></span></button>\r\n      <div class=\"navbar-collapse\" [ngClass]=\"isCollapse? 'collapse': 'deployed'\" id=\"navbarNav\" *ngIf=\"authService.isLoggedIn()\" >\r\n        <ul class=\"navbar-nav flex\">\r\n        \t<li class=\"nav-item\">\r\n        \t\t<a class=\"nav-link\" [routerLink]=\"['home']\" (click)=\"toggleCollapse()\"><span class=\"material-icons\">home</span>Inicio</a>\r\n        \t</li>\r\n      \t\t<li class=\"nav-item\">\r\n      \t\t\t<a class=\"nav-link\" [routerLink]=\"['gestor-movimientos']\" (click)=\"toggleCollapse()\"><span class=\"material-icons\">dashboard_customize</span>Gestor de Movimientos</a>\r\n      \t\t</li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"authService.logOut(); toggleCollapse()\" [routerLink]=\"['login']\"><span class=\"material-icons\">logout</span>Cerrar Sesion</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  <router-outlet></router-outlet>\r\n</div>","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  isCollapse = true;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  toggleCollapse() {\r\n  \tif (screen.width < 768)\r\n\t  \tthis.isCollapse = !this.isCollapse;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { MovementsApiClient } from '../../services/movements-api-client.service';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, AsyncValidatorFn } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  fg: FormGroup;\r\n\terrorLog: boolean;\r\n  newAccountAlert = false;\r\n\r\n  constructor(private fb: FormBuilder, public authService: AuthService, private movementsApiClient: MovementsApiClient, public router: Router) {\r\n    let state = this.router.getCurrentNavigation().extras.state;\r\n    console.log(state);\r\n    if(state)\r\n      this.newAccountAlert = state.newAccountAlert;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fg = this.fb.group({\r\n      email: ['', Validators.required, this.emailValidator(this.authService)],\r\n      password: ['', Validators.required]\r\n    })\r\n    this.errorLog = false;\r\n  }\r\n\r\n  login(): void {\r\n  \tthis.errorLog = false;\r\n    let email = this.fg.get('email').value;\r\n    let password = this.fg.get('password').value;\r\n    this.authService.login(email, password).then(\r\n      () => this.movementsApiClient.loadAccount().then(\r\n        () => this.router.navigateByUrl('/home')\r\n      )\r\n    ).catch(() => {\r\n      this.errorLog = true;\r\n      setTimeout(function() {\r\n        this.errorLog = false;\r\n      }.bind(this), 2500);\r\n    });\r\n  }\r\n\r\n  emailValidator(authService: AuthService): AsyncValidatorFn {\r\n    return (control: FormControl): Promise<{ [s: string]: boolean }> => {\r\n      return authService.validateEmail(control.value);\r\n    }\r\n  }\r\n\r\n  get email() {\r\n    return this.fg.get('email');\r\n  }\r\n\r\n}\r\n","<div class=\"alert alert-success alert-dismissible\" id=\"alert\" role=\"alert\" *ngIf=\"newAccountAlert\">\r\n\tSe ha creado su cuenta exitosamente. Ahora puede iniciar sesión.\r\n\t<button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"newAccountAlert=false\"><span aria-hidden=\"true\">&times;</span></button>\r\n</div>\r\n<div class=\"card card-outline-secondary col-12 col-md-6\">\r\n\t<div class=\"card-header\">\r\n\t\t<h3\tclass=\"mb-0\">Inicio de Sesión</h3>\r\n\t</div>\r\n\t<div class=\"card-body\">\r\n\t\t<form [formGroup]=\"fg\" (ngSubmit)=\"login()\">\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label for=\"email\"><span class=\"material-icons\">email</span>E-Mail: </label>\r\n\t\t\t\t<input type=\"email\" class=\"form-control\" formControlName=\"email\" autofocus required>\r\n\t\t\t\t<div *ngIf=\"email.invalid && email.touched\">\r\n\t\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"email.errors.invalidEmail\">El E-mail no está registrado</div>\r\n\t\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"email.errors.required\">Por favor ingrese su E-Mail</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label for=\"password\"><span class=\"material-icons\">lock</span>Contraseña: </label>\r\n\t\t\t\t<input type=\"password\" class=\"form-control\" formControlName=\"password\" required>\r\n\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"errorLog\">Contraseña incorrecta</div>\r\n\t\t\t</div>\r\n\t\t\t<button type=\"submit\" class=\"btn btn-success\" [disabled]=\"fg.invalid\"><span class=\"material-icons\">login</span>Ingresar</button>\r\n\t\t</form>\r\n\t</div>\r\n</div>\r\n<hr/>\r\n<h5 class=\"d-inline-flex mr-2\">¿Aún no posee una cuenta de usuario?</h5>\r\n<button type=\"submit\" class=\"btn btn-info d-inline-flex mb-3\" (mousedown)=\"$event.preventDefault()\" (click)=\"router.navigateByUrl('register')\"><span class=\"material-icons\">person_add</span>Registrarse</button>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { MovementsApiClient } from '../../services/movements-api-client.service';\nimport { FormGroup, FormBuilder, FormControl, Validators, AsyncValidatorFn } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\tfg: FormGroup;\n  password: FormGroup;\n  errorCreate = false;\n\n  constructor(private fb: FormBuilder, public authService: AuthService, private movementsApiClient: MovementsApiClient, public router: Router) {}\n\n  ngOnInit(): void {\n    this.fg = this.fb.group({\n      fullName: ['', Validators.required],\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ], this.emailValidator(this.authService)]\n    });\n    this.password = this.fb.group({\n      createdPassword: ['', Validators.required],\n      confirmedPassword: ['', Validators.required]\n    }, { validators: this.samePassword });\n  }\n\n  register() {\n  \tlet fullName = this.fullName.value;\n    let email = this.email.value;\n    let password = this.createdPassword.value;\n    this.authService.createAccount(fullName, email, password).then(\n      () => this.router.navigateByUrl('/login', { state: { newAccountAlert: true } }),\n      () => this.errorCreate = true\n    );\n  }\n\n  emailValidator(authService: AuthService): AsyncValidatorFn {\n    return (control: FormControl): Promise<{ [s: string]: boolean }> => {\n      return authService.existEmail(control.value);\n    }\n  }\n\n  samePassword(group: FormGroup): { [s: string]: boolean } {\n  \tif(group.get('createdPassword').value == group.get('confirmedPassword').value)\n      return null;\n    else\n      return { differentPassword: true };\n  }\n\n  get fullName() {\n    return this.fg.get('fullName');\n  }\n\n  get email() {\n    return this.fg.get('email');\n  }\n\n  get createdPassword() {\n    return this.password.get('createdPassword');\n  }\n\n  get confirmedPassword() {\n    return this.password.get('confirmedPassword');\n  }\n}\n","<div class=\"alert alert-danger alert-dismissible\" id=\"alert\" role=\"alert\" *ngIf=\"errorCreate\">\n\tSentimos informar que no se pudo crear la cuenta.\n\t<button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"errorCreate=false\"><span aria-hidden=\"true\">&times;</span></button>\n</div>\n<div class=\"card card-outline-secondary col-12 col-md-6\">\n\t<div class=\"card-header\">\n\t\t<h3\tclass=\"mb-0\">Crear Usuario</h3>\n\t</div>\n\t<div class=\"card-body\">\n\t\t<form [formGroup]=\"fg\" (ngSubmit)=\"register()\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label for=\"fullName\"><span class=\"material-icons\">person</span>Nombre y Apellido: </label>\n\t\t\t\t<input formControlName=\"fullName\" type=\"text\" class=\"form-control\" required>\n\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"fullName.touched && fullName.invalid\">Por favor ingrese su Nombre completo.</div>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label for=\"email\"><span class=\"material-icons\">email</span>E-Mail: </label>\n\t\t\t\t<input formControlName=\"email\" type=\"email\" class=\"form-control\" required>\n\t\t\t\t<div *ngIf=\"email.invalid && email.touched\">\n\t\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"email.errors.email\">El E-mail es invalido.</div>\n\t\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"email.errors.registeredEmail\">El E-mail ya está registrado.</div>\n\t\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"email.errors.required\">Por favor ingrese su E-Mail.</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div [formGroup]=\"password\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"password\"><span class=\"material-icons\">lock</span>Contraseña: </label>\n\t\t\t\t\t<input formControlName=\"createdPassword\" type=\"password\" class=\"form-control\" required>\n\t\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"createdPassword.touched && createdPassword.invalid\">Por favor ingrese una contraseña.</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"password\"><span class=\"material-icons\">enhanced_encryption</span>Confirme la contraseña: </label>\n\t\t\t\t\t<input formControlName=\"confirmedPassword\" type=\"password\" class=\"form-control\" required>\n\t\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"confirmedPassword.dirty && password.errors\">Las contraseñas no coinciden.</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button type=\"submit\" class=\"btn btn-success\" [disabled]=\"fg.invalid || password.invalid\"><span class=\"material-icons\">how_to_reg</span>Registrarse</button>\n\t\t\t<button type=\"button\" class=\"btn btn-info ml-2\" (mousedown)=\"$event.preventDefault()\" (click)=\"router.navigateByUrl('login')\"><span class=\"material-icons\">keyboard_return</span>Regresar</button>\n\t\t</form>\n\t</div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, InjectionToken, APP_INITIALIZER } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { MovementsManagerComponent } from './components/movements-manager/movements-manager.component';\nimport { MovementsApiClient } from './services/movements-api-client.service';\nimport { AuthService } from './services/auth.service';\nimport { MovementComponent } from './components/movement/movement.component';\nimport { FormAddMovementComponent } from './components/form-add-movement/form-add-movement.component';\nimport { FormEditMovementComponent } from './components/form-edit-movement/form-edit-movement.component';\nimport { UserLoggedGuard } from './guards/user-logged.guard';\nimport { RegisterComponent } from './components/register/register.component';\n\n\n// api config\nexport interface AppConfig {\n  apiEndpoint: string;\n}\nconst APP_CONFIG_VALUE: AppConfig = {\n  apiEndpoint: 'http://localhost:3000'\n}\nexport const APP_CONFIG = new InjectionToken<AppConfig>('app.config'); \n\nexport function init_app(movementsApiClient: MovementsApiClient): () => Promise<any> {\n  console.log(\"initializer se ejecuto\");\n  return () => movementsApiClient.loadAccount();\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    MovementsManagerComponent,\n    MovementComponent,\n    FormAddMovementComponent,\n    FormEditMovementComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    MovementsApiClient,\n    AuthService,\n    UserLoggedGuard,\n    { provide: APP_CONFIG, useValue: APP_CONFIG_VALUE },\n    { provide: APP_INITIALIZER, useFactory: init_app, deps: [MovementsApiClient], multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, HostBinding, ViewChild, ElementRef, EventEmitter } from '@angular/core';\r\nimport { formatDate } from '@angular/common';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormEditMovementComponent } from '../form-edit-movement/form-edit-movement.component';\r\nimport { Category } from '../../models/category.model';\r\n\r\n@Component({\r\n  selector: 'app-movement',\r\n  templateUrl: './movement.component.html',\r\n  styleUrls: ['./movement.component.css']\r\n})\r\nexport class MovementComponent implements OnInit {\r\n\t@Input() mount: number;\r\n  @Input() type: string;\r\n  @Input() category_id: number;\r\n\t@Input() concept: string;\r\n  @Input() date: Date;\r\n\t@Input() edit: boolean;\r\n  @Input() id: string;\r\n  @Output() deleteMovement: EventEmitter<string>;\r\n  displayOptions: boolean;\r\n  category_name: string;\r\n\r\n  constructor(private modalService: NgbModal) {\r\n    this.displayOptions = false;\r\n    this.deleteMovement = new EventEmitter();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.category_name = Category.getCategoryName(this.type, this.category_id);\r\n  }\r\n\r\n  showOptions() {\r\n \t\tthis.displayOptions = true;\r\n  }\r\n\r\n  hideOptions() {\r\n  \tthis.displayOptions = false;\r\n  }\r\n\r\n  editClick() {\r\n    this.displayOptions = false;\r\n    const modalRef = this.modalService.open(FormEditMovementComponent);\r\n    modalRef.componentInstance.initialMount = this.mount;\r\n    modalRef.componentInstance.type = this.type;\r\n    modalRef.componentInstance.initialCategory = this.category_id;\r\n    modalRef.componentInstance.initialConcept = this.concept;\r\n    modalRef.componentInstance.id = this.id;\r\n  }\r\n\r\n  deleteClick(deleteModal) {\r\n    this.displayOptions = false;\r\n    const modalRef = this.modalService.open(deleteModal, { ariaLabelledBy: 'modal-title' });\r\n    modalRef.result.then((result) => {\r\n      if (result == 'delete')\r\n        this.deleteMovement.emit(this.id);\r\n    }).catch(() => {});\r\n  }\r\n}\r\n","<div class=\"movement-container mx-auto\" [class.movement-editable]=\"edit\">\r\n\t<div class=\"screen dark\" [class.d-flex]=\"displayOptions\">\r\n\t\t<button class=\"edit-button\" (click)=\"editClick()\">\r\n\t\t\t<span class=\"material-icons\">edit</span>Editar\r\n\t\t</button>\r\n\t\t<button class=\"delete-button\" (click)=\"deleteClick(deleteModal)\">\r\n\t\t\t<span class=\"material-icons\">delete</span>Eliminar\r\n\t\t</button>\r\n\t\t<button class=\"cancel-button d-md-none\" (click)=\"hideOptions()\" *ngIf=\"edit\">\r\n\t\t\t<span class=\"material-icons\">close</span>\r\n\t\t</button> \r\n\t</div>\r\n\t<div class=\"cell col\">\r\n\t\t<div class=\"tag d-block\">Monto</div>\r\n\t\t<div>${{ mount }}</div>\r\n\t</div>\r\n\t<div class=\"vl\"></div>\r\n\t<div class=\"cell col\">\r\n\t\t<div class=\"tag d-block\">Tipo</div>\r\n\t\t<div>{{ type }}</div>\r\n\t</div>\r\n\t<div class=\"cell col\">\r\n\t\t<div class=\"tag d-block\">Categoria</div>\r\n\t\t{{ category_name }}\r\n\t</div>\r\n\t<div class=\"w-100 d-md-none\"></div>\r\n\t<div class=\"cell col\">\r\n\t\t<div class=\"tag d-block\">Concepto</div>\r\n\t\t{{ concept }}\r\n\t</div>\r\n\t<div class=\"cell col\">\r\n\t\t<div class=\"tag d-block\">Fecha</div>\r\n\t\t{{ date | date:\"dd/MM/yyyy\" }}\r\n\t</div>\r\n\t<button class=\"col-4 col-md-2 d-lg-none options\" [class.d-none]=\"!edit\" (click)=\"showOptions()\"><span class=\"material-icons mr-0\">construction</span>Opciones</button>\r\n</div>\r\n\r\n<ng-template #deleteModal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-title\">Eliminar Movimento</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n  \t¿Está seguro/a que desea eliminar este registro?\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss()\">Cancelar</button>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close('delete')\">Eliminar</button>\r\n  </div>\r\n</ng-template>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoggedGuard implements CanActivate {\n\tconstructor(private authService: AuthService, private router: Router) {\n\t}\n\n  canActivate(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isLoggedIn = this.authService.isLoggedIn();\n    if (!isLoggedIn)\n  \t\tthis.router.navigateByUrl('/login');\n    else return isLoggedIn;\n  }\n  \n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Movement } from '../../models/movement.model';\nimport { MovementsApiClient } from '../../services/movements-api-client.service';\nimport { Category } from '../../models/category.model';\n\n@Component({\n  selector: 'app-form-edit-movement',\n  templateUrl: './form-edit-movement.component.html',\n  styleUrls: ['./form-edit-movement.component.css']\n})\nexport class FormEditMovementComponent implements OnInit {\n\t@Input() initialMount: number;\n\t@Input() type: string;\n  @Input() initialCategory: string;\n\t@Input() initialConcept: string;\n\t@Input() id: string;\n\tfg: FormGroup;\n  categories: Map<number, string>;\n\n  constructor(private fb: FormBuilder, public activeModal: NgbActiveModal, private movementsApiClient: MovementsApiClient) {}\n\n  ngOnInit(): void {\n    this.fg = this.fb.group({\n      mount: [this.initialMount, [\n        Validators.required,\n        this.mountValidator\n      ]],\n      category: this.initialCategory,\n      concept: [this.initialConcept, Validators.required]\n    });\n    this.categories = Category.getCategories(this.type);\n  \n  }\n\n  save() {\n    let mount = this.fg.get('mount').value;\n    let category = this.fg.get('category').value;\n    let concept = this.fg.get('concept').value;\n  \tthis.movementsApiClient.edit(mount, this.initialMount, this.type, category, concept, this.id)\n  \tthis.activeModal.close('Close click');\n  }\n\n  mountValidator(control: FormControl): { [s: string]: boolean } {\n  \tlet l = (control.value as number);\n  \treturn (l > 0 && l < 500000)? null: { invalidMount: true };\n  }\n\n  get mount() {\n    return this.fg.get('mount');\n  }\n\n  get category() {\n    return this.fg.get('category');\n  }\n\n  get concept() {\n    return this.fg.get('concept');\n  }\n\n}\n","<div class=\"modal-header\">\r\n\t<h4 class=\"modal-title\">Edite los datos de Transferencia</h4>\r\n\t<button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t</button>\r\n</div>\r\n<div class=\"modal-content\">\r\n\t<form [formGroup]=\"fg\" (ngSubmit)=\"save()\" class=\"col-12 col-sm-8 mx-auto py-3\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label for=\"mount\">Monto</label>\r\n\t\t\t<input formControlName=\"mount\" type=\"number\" class=\"form-control\" step=\"10\" autocomplete=\"off\" ngbAutofocus required>\r\n\t\t\t<div *ngIf=\"mount.invalid && mount.touched\">\r\n\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"mount.errors.required\">Por favor ingrese un monto.</div>\r\n\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"mount.errors.invalidMount && !mount.errors.required\">Monto invalido. Ingrese un monto mayor a $0 y menor a $50000.</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label for=\"type\">Categoria</label>\r\n\t\t\t<select formControlName=\"category\" class=\"form-control\" required>\r\n\t\t\t\t<option *ngFor=\"let category of categories | keyvalue\" [ngValue]=\"category.key\">{{ category.value }}</option>\r\n\t\t\t</select>\r\n\t\t\t<div class=\"alert alert-danger\" *ngIf=\"category.invalid && category.touched\">Por favor seleccione una categoria.</div>\r\n\t\t</div>\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label for=\"concept\">Concepto</label>\r\n\t\t\t<input formControlName=\"concept\" class=\"form-control\" type=\"text\" autocomplete=\"off\">\r\n\t\t\t<div class=\"alert alert-danger\" *ngIf=\"concept.invalid && concept.touched\">Por favor ingrese un concepto.</div>\r\n\t\t</div>\r\n\t\t<button\ttype=\"submit\" class=\"btn btn-primary w-100 py-2\" [disabled]=\"!fg.valid\">Guardar Cambios</button>\r\n\t</form>\r\n</div>","export class Category {\r\n\tstatic categories_ingress = new Map([\r\n\t\t[1, 'Salario'],\r\n\t\t[2, 'Transferencia'],\r\n\t\t[3, 'Otros']\r\n\t]);\r\n\tstatic categories_egress = new Map([\r\n\t  [4, 'Gastronomia'],\r\n\t  [5, 'Entretenimiento'],\r\n\t  [6, 'Indumentaria'],\r\n\t  [7, 'Compras'],\r\n\t  [8, 'Servicios'],\r\n\t  [9, 'Transporte'],\r\n\t  [10, 'Alquiler'],\r\n\t  [11, 'Otros']\r\n  ]);\r\n\r\n\tstatic getCategories(type: string) {\r\n\t\tif(type == 'Ingreso') {\r\n\t\t\treturn this.categories_ingress;\r\n\t\t}\r\n\t\telse if(type == 'Egreso') {\r\n\t\t\treturn this.categories_egress;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new Map([...this.categories_ingress, ...this.categories_egress]);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getCategoryName(type: string, id: number) {\r\n\t\tif(type === 'Ingreso')\r\n\t\t\treturn this.categories_ingress.get(id);\r\n\t\telse if('Egreso')\r\n\t\t\treturn this.categories_egress.get(id);\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MovementsApiClient } from '../../services/movements-api-client.service';\nimport { Movement } from '../../models/movement.model';\nimport { Category } from '../../models/category.model';\n\n@Component({\n  selector: 'app-form-add-movement',\n  templateUrl: './form-add-movement.component.html',\n  styleUrls: ['./form-add-movement.component.css']\n})\nexport class FormAddMovementComponent implements OnInit {\n\tfg: FormGroup;\n  categories: Map<number, string>;\n\n  constructor(private fb: FormBuilder, public activeModal: NgbActiveModal, private movementsApiClient: MovementsApiClient) {}\n\n  ngOnInit(): void {\n    this.fg = this.fb.group({\n      mount: ['', [\n        Validators.required,\n        this.mountValidator\n      ]],\n      type: ['', Validators.required],\n      category: [{ value: '', disabled: true }, Validators.required],\n      concept: ['', Validators.required]\n    });\n  }\n\n  save() {\n    let mount = this.fg.get('mount').value;\n    let type = this.fg.get('type').value;\n    let category = this.fg.get('category').value;\n    let concept = this.fg.get('concept').value;\n  \tlet date = new Date();\n    let user_mail = localStorage.getItem('userLog');\n    let movement = new Movement(mount, type, category, concept, date, user_mail);\n  \tthis.movementsApiClient.add(movement);\n    this.activeModal.close('Close click');\n  }\n\n  updateCategory() {\n    let typeValue = this.fg.get('type').value;\n    this.fg.get('category').markAsUntouched();\n    if (typeValue == \"Ingreso\" || typeValue == \"Egreso\") {\n      this.categories = Category.getCategories(typeValue);\n      this.fg.get('category').setValue('');\n      this.fg.get('category').enable();\n    } else {\n      this.fg.get('category').setValue('');\n      this.fg.get('category').disable();\n    }\n  }\n\n  mountValidator(control: FormControl): { [s: string]: boolean } {\n  \tlet l = (control.value as number);\n  \treturn (l > 0 && l < 500000)? null: { invalidMount: true };\n  }\n\n  get mount() {\n    return this.fg.get('mount');\n  }\n\n  get type() {\n    return this.fg.get('type');\n  }\n\n  get category() {\n    return this.fg.get('category');\n  }\n\n  get concept() {\n    return this.fg.get('concept');\n  }\n\n}\n","<div class=\"modal-header\">\r\n\t<h4 class=\"modal-title\">Complete los datos de Transferencia</h4>\r\n\t<button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t</button>\r\n</div>\r\n<div class=\"modal-content\">\r\n\t<form [formGroup]=\"fg\" (ngSubmit)=\"save()\" class=\"col-12 col-sm-8 mx-auto py-3\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label for=\"mount\">Monto</label>\r\n\t\t\t<input formControlName=\"mount\" type=\"number\" class=\"form-control\" step=\"10\" placeholder=\"Ingresa el monto\" autocomplete=\"off\" ngbAutofocus required>\r\n\t\t\t<div *ngIf=\"mount.invalid && mount.touched\">\r\n\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"mount.errors.required\">Por favor ingrese un monto.</div>\r\n\t\t\t\t<div class=\"alert alert-danger\" *ngIf=\"mount.errors.invalidMount && !mount.errors.required\">Monto invalido. Ingrese un monto mayor a $0 y menor a $500000.</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label for=\"type\">Tipo</label>\r\n\t\t\t<select formControlName=\"type\" class=\"form-control\" (change)=\"updateCategory()\" required>\r\n\t\t\t\t<option [ngValue]=\"''\" selected>Seleccione un tipo de transferencia</option>\r\n\t\t\t\t<option [ngValue]=\"'Ingreso'\">Ingreso</option>\r\n\t\t\t\t<option [ngValue]=\"'Egreso'\">Egreso</option>\r\n\t\t\t</select>\r\n\t\t\t<div class=\"alert alert-danger\" *ngIf=\"type.invalid && type.touched\">Por favor seleccione un tipo de transferencia.</div>\r\n\t\t</div>\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label for=\"type\">Categoria</label>\r\n\t\t\t<select formControlName=\"category\" class=\"form-control\" required>\r\n\t\t\t\t<option [ngValue]=\"''\" selected>Seleccione una categoria</option>\r\n\t\t\t\t<option *ngFor=\"let category of categories | keyvalue\" [ngValue]=\"category.key\">{{ category.value }}</option>\r\n\t\t\t</select>\r\n\t\t\t<div class=\"alert alert-danger\" *ngIf=\"category.invalid && category.touched\">Por favor seleccione una categoria.</div>\r\n\t\t</div>\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label for=\"concept\">Concepto</label>\r\n\t\t\t<input type=\"text\" formControlName=\"concept\" class=\"form-control\" placeholder=\"Ingresa el concepto\" autocomplete=\"off\" required>\r\n\t\t\t<div class=\"alert alert-danger\" *ngIf=\"concept.invalid && concept.touched\">Por favor ingrese un concepto.</div>\r\n\t\t</div>\r\n\t\t<button\ttype=\"submit\" class=\"btn btn-primary w-100 p-2\" [disabled]=\"fg.invalid\">Guardar Transferencia</button>\r\n\t</form>\r\n</div>","import { Injectable, Inject, forwardRef } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { AppConfig, APP_CONFIG } from '../app.module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(@Inject(forwardRef(() => APP_CONFIG)) private config: AppConfig, private http: HttpClient) {}\n\n  login(email: string, password: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\n      const req = new HttpRequest('POST', this.config.apiEndpoint + '/login', {'email': email, 'password': password}, { headers: headers });\n      this.http.request(req).subscribe((result: HttpResponse<{}>) => {\n        if (result.status === 200) {\n          if (result.body) {\n            localStorage.setItem('userLog', email);\n            resolve();\n          } else {\n            reject();\n          }\n        }\n      });\n    });\n  }\n\n  logOut(): any {\n  \tlocalStorage.removeItem('userLog');\n  }\n\n  isLoggedIn(): boolean {\n  \treturn localStorage.getItem('userLog') !== null;\n  }\n\n  validateEmail(email: string): Promise<{ [s: string]: boolean }> {\n    return new Promise<{ [s: string]: boolean }>((resolve, reject) => {\n      const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\n      const req = new HttpRequest('GET', this.config.apiEndpoint + '/validateEmail?email=' + email, { headers: headers });\n      this.http.request(req).subscribe((result: HttpResponse<{}>) => {\n        if (result.status === 200)\n          resolve(result.body? null: { invalidEmail: true });\n      });\n    });\n  }\n\n  existEmail(email: string): Promise<{ [s: string]: boolean }> {\n    return new Promise<{ [s: string]: boolean }>((resolve, reject) => {\n      const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\n      const req = new HttpRequest('GET', this.config.apiEndpoint + '/validateEmail?email=' + email, { headers: headers });\n      this.http.request(req).subscribe((result: HttpResponse<{}>) => {\n        if (result.status === 200)\n          resolve(result.body? { registeredEmail: true }: null);\n      });\n    });\n  }\n\n  createAccount(name: string, email: string, password: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const headers: HttpHeaders = new HttpHeaders({'X-API-TOKEN': 'token-seguridad'});\n      const req = new HttpRequest('POST', this.config.apiEndpoint + '/createAccount', { 'name': name, 'email': email, 'password': password }, { headers: headers });\n      this.http.request(req).subscribe((result: HttpResponse<{}>) => {\n        if (result.status === 200)\n          resolve();\n      }, err => {\n        if(err.status === 409)\n          reject();\n      });\n    });\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class Movement {\r\n\r\n\tconstructor(public mount: number, public type: string, public category: number, public concept: string, public date: Date, public user_email: string, public id = uuidv4()) {}\r\n\r\n\tsetMount(newMount: number) {\r\n\t\tthis.mount = newMount;\r\n\t}\r\n\tsetCategory(newCategory: number) {\r\n\t\tthis.category = newCategory;\r\n\t}\r\n\tsetConcept(newConcept: string) {\r\n\t\tthis.concept = newConcept;\r\n\t}\r\n\tsetDate(newDate: Date) {\r\n\t\tthis.date = newDate;\r\n\t}\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { MovementsManagerComponent } from './components/movements-manager/movements-manager.component';\r\nimport { UserLoggedGuard } from './guards/user-logged.guard';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', redirectTo: 'home', pathMatch: 'full'},\r\n\t{ path: 'home', component: HomeComponent, canActivate: [ UserLoggedGuard ]},\r\n\t{ path: 'gestor-movimientos', component: MovementsManagerComponent, canActivate: [ UserLoggedGuard ]},\r\n\t{ path: 'login', component: LoginComponent},\r\n\t{ path: 'register', component: RegisterComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}